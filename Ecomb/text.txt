const PaymentScreen = () => {
  const publicKey = "pk_test_1bf94b73a334154859e1d426fba4b566245ef5bb";
  const location = useLocation();
  const navigate = useNavigate();
  const dispatch = useDispatch();
  const totalAmount = location.state ? location.state.totalAmount : null;
  const [email, setEmail] = useState("");
  const [amount, setAmount] = useState(totalAmount || 0);

  const payWithPaystack = (e) => {
    e.preventDefault();

    let handler = PaystackPop.setup({
      key: publicKey,
      email: email,
      amount: amount * 100,
      ref: '' + Math.floor((Math.random() * 1000000000) + 1),
      onClose: function() {
        alert('Window closed.');
      },
      callback: function(response) {
        let message = 'Payment complete! Reference: ' + response.reference;
        alert(message);

        // Fetching the shipping address from local storage
        const shippingAddress = JSON.parse(localStorage.getItem('shippingAddress')) || {};

        // Fetching the cart items from local storage
        const cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

        const order = {
          order_id: response.reference,
          totalAmount: amount,
          shippingAddress: shippingAddress,
          orderItems: cartItems,
        };

        // Dispatching the createOrder action
        dispatch(createOrder(order));

        // Navigating to the order confirmation page
        navigate('/order-confirmation', { state: { order } });
      }
    });

    handler.openIframe();
  };

  return (
    <div>
      <h2>Paystack Payment</h2>
      <form id="paymentForm" onSubmit={payWithPaystack}>
        <div>
          <label htmlFor="email-address">Email Address</label>
          <input
            type="email"
            id="email-address"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </div>
        <div>
          <label htmlFor="amount">Amount</label>
          <input
            type="number"
            id="amount"
            value={amount}
            onChange={(e) => setAmount(e.target.value)}
            required
            readOnly
          />
        </div>
        <button type="submit" className="bg-blue-600 p-4 rounded-md text-gray-300">
          Pay with Paystack
        </button>
      </form>
    </div>
  );
};

export default PaymentScreen;








import React, { useState } from "react";
import { useLocation, useNavigate } from "react-router-dom";
import PaystackPop from '@paystack/inline-js';

const PaymentScreen = () => {
  const publicKey = "pk_test_1bf94b73a334154859e1d426fba4b566245ef5bb";
  const location = useLocation();
  const navigate = useNavigate();
  const totalAmount = location.state ? location.state.totalAmount : null;
  const [email, setEmail] = useState("");
  const [amount, setAmount] = useState(totalAmount || 0);

  const payWithPaystack = (e) => {
    e.preventDefault();

    let handler = PaystackPop.setup({
      key: publicKey,
      email: email,
      amount: amount * 100,
      ref: '' + Math.floor((Math.random() * 1000000000) + 1),
      onClose: function() {
        alert('Window closed.');
      },
      callback: function(response) {
        let message = 'Payment complete! Reference: ' + response.reference;
        alert(message);
        const order = { order_id: response.reference, totalAmount: amount };
        navigate('/order-confirmation', { state: { order } });
      }
    });

    handler.openIframe();
  };

  return (
    <div>
      <h2>Paystack Payment</h2>
      <form id="paymentForm" onSubmit={payWithPaystack}>
        <div>
          <label htmlFor="email-address">Email Address</label>
          <input
            type="email"
            id="email-address"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </div>
        <div>
          <label htmlFor="amount">Amount</label>
          <input
            type="number"
            id="amount"
            value={amount}
            onChange={(e) => setAmount(e.target.value)}
            required
            readOnly
          />
        </div>
        <button type="submit" className="bg-blue-600 p-4 rounded-md text-gray-300">
          Pay with Paystack
        </button>
      </form>
    </div>
  );
};

export default PaymentScreen;
